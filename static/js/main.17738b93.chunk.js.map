{"version":3,"sources":["fbInstance.js","routes/Auth.jsx","components/YweetFactory.js","components/Yweet.js","components/YweetList.js","routes/Home.jsx","routes/Profile.jsx","components/Navigation.js","components/Router.js","components/App.js","index.js"],"names":["firebase","apiKey","process","authDomain","projectId","storageBucket","messagingSenderId","appId","authService","auth","dbService","firestore","storageService","storage","Auth","useState","email","setEmail","password","setPassword","newAccount","setNewAccount","loginError","setLoginError","onChange","event","target","name","value","onSubmit","a","preventDefault","createUserWithEmailAndPassword","getAuth","catch","error","message","signInWithEmailAndPassword","onSocialLogin","provider","GoogleAuthProvider","GithubAuthProvider","signInWithPopup","type","placeholder","required","onClick","prev","YweetFactory","userObj","yweet","setYweet","attachment","setAttachment","image","useRef","attachmentUrl","attachmentRef","ref","getStorage","uid","uuidv4","uploadString","response","getDownloadURL","yweetObj","text","createdAt","Date","now","creatorId","addDoc","collection","getFirestore","onClearAttachment","onFileChange","theFile","files","fileReader","FileReader","onloadend","finishedEvent","result","readAsDataURL","console","log","current","maxLength","accept","src","width","height","alt","Yweet","isOwner","editMode","setEditMode","newYweet","setNewYweet","onDeleteClick","window","confirm","deleteDoc","doc","id","deleteObject","toggleEdit","updateDoc","YweetList","yweets","map","data","Home","setYweets","useEffect","yweetRef","query","orderBy","onSnapshot","getDocs","then","docs","Profile","refreshUser","history","useHistory","myYweets","setMyYweets","displayName","inputDisplayName","setInputDisplayName","onLogOutClick","signOut","push","where","getMyYweets","updateProfile","Navigation","to","AppRouter","isLoggedIn","exact","path","App","init","setInit","setUserObj","onAuthStateChanged","user","currentUser","Object","assign","Boolean","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.17738b93.chunk.js","sourcesContent":["import * as firebase from \"firebase/app\";\nimport * as auth from \"firebase/auth\";\nimport * as firestore from \"firebase/firestore\";\nimport * as storage from \"firebase/storage\";\n\nconst firebaseConfig = {\n  apiKey: process.env.REACT_APP_API_KEY,\n  authDomain: process.env.REACT_APP_AUTH_DOMAIN,\n  projectId: process.env.REACT_APP_PROJECT_ID,\n  storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\n  messagingSenderId: process.env.REACT_APP_MESSAGING_SENDER_ID,\n  appId: process.env.REACT_APP_APP_ID,\n};\n\nfirebase.initializeApp(firebaseConfig);\n\nexport const authService = auth;\nexport const dbService = firestore;\nexport const storageService = storage;\n","import React, { useState } from \"react\";\nimport { authService } from \"fbInstance\";\n\nconst Auth = () => {\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [newAccount, setNewAccount] = useState(true);\n  const [loginError, setLoginError] = useState(\"\");\n\n  const onChange = (event) => {\n    const {\n      target: { name, value },\n    } = event;\n\n    if (name === \"email\") setEmail(value);\n\n    if (name === \"password\") setPassword(value);\n  };\n\n  const onSubmit = async (event) => {\n    event.preventDefault();\n    if (newAccount) {\n      await authService\n        .createUserWithEmailAndPassword(authService.getAuth(), email, password)\n        .catch((error) => {\n          setLoginError(error.message);\n        });\n    } else {\n      await authService\n        .signInWithEmailAndPassword(authService.getAuth(), email, password)\n        .catch((error) => {\n          setLoginError(error.message);\n        });\n    }\n  };\n\n  const toggleAccount = () => {\n    setNewAccount((prev) => !prev);\n    setLoginError(\"\");\n  };\n\n  const onSocialLogin = async (event) => {\n    const {\n      target: { name },\n    } = event;\n\n    let provider;\n    if (name === \"google\") {\n      provider = new authService.GoogleAuthProvider();\n    } else if (name === \"github\") {\n      provider = new authService.GithubAuthProvider();\n    }\n    await authService.signInWithPopup(authService.getAuth(), provider);\n  };\n\n  return (\n    <div>\n      <form onSubmit={onSubmit}>\n        <input\n          name=\"email\"\n          type=\"email\"\n          placeholder=\"email\"\n          required\n          value={email}\n          onChange={onChange}\n        ></input>\n        <input\n          name=\"password\"\n          type=\"password\"\n          placeholder=\"password\"\n          required\n          value={password}\n          onChange={onChange}\n        ></input>\n        <input\n          type=\"submit\"\n          value={newAccount ? \"Create Account\" : \"Sign in\"}\n          required\n        ></input>\n        {loginError}\n      </form>\n      <span onClick={toggleAccount}>\n        {newAccount ? \"Sign in\" : \"Create Account\"}\n      </span>\n      <div>\n        <button onClick={onSocialLogin} name=\"google\">\n          continue with Google\n        </button>\n        <button onClick={onSocialLogin} name=\"github\">\n          continue with Github\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default Auth;\n","import { dbService, storageService } from \"fbInstance\";\nimport React, { useRef, useState } from \"react\";\nimport { v4 as uuidv4 } from \"uuid\";\n\nconst YweetFactory = ({ userObj }) => {\n  const [yweet, setYweet] = useState(\"\");\n  const [attachment, setAttachment] = useState(null);\n  const image = useRef(null);\n\n  const onSubmit = async (event) => {\n    event.preventDefault();\n    let attachmentUrl = \"\";\n    if (attachment !== null) {\n      const attachmentRef = storageService.ref(\n        storageService.getStorage(),\n        `${userObj.uid}/${uuidv4()}`\n      );\n      const response = await storageService.uploadString(\n        attachmentRef,\n        attachment,\n        \"data_url\"\n      );\n      attachmentUrl = await storageService.getDownloadURL(response.ref);\n    }\n    const yweetObj = {\n      text: yweet,\n      createdAt: Date.now(),\n      creatorId: userObj.uid,\n      attachmentUrl,\n    };\n    dbService.addDoc(\n      dbService.collection(dbService.getFirestore(), \"yweet\"),\n      yweetObj\n    );\n    setYweet(\"\");\n    onClearAttachment();\n  };\n\n  const onChange = (event) => {\n    const {\n      target: { value },\n    } = event;\n    setYweet(value);\n  };\n\n  const onFileChange = (event) => {\n    if (!event) {\n      console.log((image.current.value = \"\"));\n    } else {\n      const {\n        target: { files },\n      } = event;\n      const theFile = files[0];\n      const fileReader = new FileReader();\n      fileReader.onloadend = (finishedEvent) => {\n        const {\n          target: { result },\n        } = finishedEvent;\n        setAttachment(result);\n      };\n      fileReader.readAsDataURL(theFile);\n    }\n  };\n\n  const onClearAttachment = () => {\n    setAttachment(null);\n    onFileChange(null);\n  };\n  return (\n    <form onSubmit={onSubmit}>\n      <input\n        value={yweet}\n        onChange={onChange}\n        type=\"text\"\n        placeholder=\"What's on your mind?\"\n        maxLength={120}\n      />\n      <input type=\"submit\" value=\"Yweet\" />\n      <input\n        ref={image}\n        type=\"file\"\n        accept=\"image/*\"\n        onChange={onFileChange}\n      ></input>\n      {attachment && (\n        <>\n          <img src={attachment} width=\"50px\" height=\"50px\" alt=\"\" />\n          <button onClick={onClearAttachment}>clear attachment</button>\n        </>\n      )}\n    </form>\n  );\n};\n\nexport default YweetFactory;\n","import React, { useState } from \"react\";\nimport { dbService, storageService } from \"fbInstance\";\n\nconst Yweet = ({ yweetObj, isOwner }) => {\n  const [editMode, setEditMode] = useState(false);\n  const [newYweet, setNewYweet] = useState(yweetObj.text);\n\n  const onDeleteClick = async () => {\n    const ok = window.confirm(\"are you sure?\");\n    if (ok) {\n      dbService.deleteDoc(\n        dbService.doc(dbService.getFirestore(), \"yweet\", yweetObj.id)\n      );\n      const response = storageService.ref(\n        storageService.getStorage(),\n        yweetObj.attachmentUrl\n      );\n      const result = await storageService.deleteObject(response);\n      console.log(result);\n    }\n  };\n\n  const onEditClick = () => {};\n\n  const toggleEdit = () => setEditMode((prev) => !prev);\n\n  const onChange = (event) => {\n    const {\n      target: { value },\n    } = event;\n    setNewYweet(value);\n  };\n\n  const onSubmit = (event) => {\n    event.preventDefault();\n    dbService.updateDoc(\n      dbService.doc(dbService.getFirestore(), \"yweet\", yweetObj.id),\n      { text: newYweet }\n    );\n    toggleEdit();\n  };\n\n  return (\n    <div>\n      {editMode ? (\n        isOwner && (\n          <>\n            <form onSubmit={onSubmit}>\n              <input\n                onChange={onChange}\n                type=\"text\"\n                value={newYweet}\n                required\n              ></input>\n              <input type=\"submit\" value=\"edit\" onClick={onEditClick}></input>\n            </form>\n            <button onClick={toggleEdit}>Cancel</button>\n          </>\n        )\n      ) : (\n        <>\n          <h4>{yweetObj.text}</h4>\n          {yweetObj.attachmentUrl && (\n            <img\n              src={yweetObj.attachmentUrl}\n              width=\"50px\"\n              height=\"50px\"\n              alt=\"\"\n            ></img>\n          )}\n          {isOwner ? (\n            <>\n              <button onClick={onDeleteClick}>Delete</button>\n              <button onClick={toggleEdit}>Edit</button>\n            </>\n          ) : (\n            \"\"\n          )}\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default Yweet;\n","import React from \"react\";\nimport Yweet from \"./Yweet\";\n\nconst YweetList = ({ yweets, userObj }) => {\n  return (\n    <div>\n      {yweets.map((data) => {\n        return (\n          <Yweet\n            key={data.id}\n            yweetObj={data}\n            isOwner={data.creatorId === userObj.uid}\n          />\n        );\n      })}\n    </div>\n  );\n};\n\nexport default YweetList;\n","import YweetFactory from \"components/YweetFactory\";\nimport YweetList from \"components/YweetList\";\nimport { dbService } from \"fbInstance\";\nimport React, { useEffect, useState } from \"react\";\n\nconst Home = ({ userObj }) => {\n  const [yweets, setYweets] = useState([]);\n\n  useEffect(() => {\n    const yweetRef = dbService.collection(dbService.getFirestore(), \"yweet\");\n    const query = dbService.query(\n      yweetRef,\n      dbService.orderBy(\"createdAt\", \"desc\")\n    );\n\n    dbService.onSnapshot(\n      yweetRef,\n      dbService.getDocs(query).then((result) => {\n        const yweets = result.docs.map((doc) => {\n          return {\n            id: doc.id,\n            ...doc.data(),\n          };\n        });\n        setYweets(yweets);\n      })\n    );\n  });\n\n  return (\n    <>\n      <YweetFactory userObj={userObj} />\n      <YweetList yweets={yweets} userObj={userObj} />\n    </>\n  );\n};\n\nexport default Home;\n","import React, { useEffect, useState } from \"react\";\nimport { authService, dbService } from \"fbInstance\";\nimport { useHistory } from \"react-router\";\nimport Yweet from \"components/Yweet\";\nimport YweetList from \"components/YweetList\";\n\nconst Profile = ({ userObj, refreshUser }) => {\n  const history = useHistory();\n  const [myYweets, setMyYweets] = useState([]);\n  const [inputDisplayName, setInputDisplayName] = useState(userObj.displayName);\n\n  const onLogOutClick = async () => {\n    await authService.getAuth().signOut();\n    history.push(\"/\");\n  };\n\n  const getMyYweets = () => {\n    // dbService.onSnapshot(\n    const yweetRef = dbService.collection(dbService.getFirestore(), \"yweet\");\n    const query = dbService.query(\n      yweetRef,\n      dbService.where(\"creatorId\", \"==\", userObj.uid),\n      dbService.orderBy(\"createdAt\")\n    );\n\n    dbService.getDocs(query).then((result) => {\n      const yweets = result.docs.map((doc) => {\n        return {\n          id: doc.id,\n          ...doc.data(),\n        };\n      });\n      setMyYweets(yweets);\n    });\n  };\n\n  const onSubmitHandler = (event) => {\n    event.preventDefault();\n    authService\n      .updateProfile(userObj, {\n        displayName: event.target.inputDisplayName.value,\n      })\n      .then((result) => {\n        refreshUser();\n      });\n  };\n\n  const onChangeHandler = (event) => {\n    const {\n      target: { value },\n    } = event;\n\n    setInputDisplayName(value);\n  };\n\n  useEffect(() => {\n    getMyYweets();\n  });\n\n  return (\n    <>\n      <form onSubmit={onSubmitHandler}>\n        <input\n          name=\"inputDisplayName\"\n          type=\"text\"\n          onChange={onChangeHandler}\n          value={inputDisplayName}\n        />\n        <input type=\"submit\" value=\"change\" />\n      </form>\n      <button onClick={onLogOutClick}>Log out</button>\n      <YweetList yweets={myYweets} userObj={userObj} />\n    </>\n  );\n};\n\nexport default Profile;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nconst Navigation = ({ userObj }) => (\n  <nav>\n    <ul>\n      <li>\n        <Link to=\"/\">Home</Link>\n      </li>\n      <li>\n        <Link to=\"/profile\">{userObj.displayName}'s Profile</Link>\n      </li>\n    </ul>\n  </nav>\n);\n\nexport default Navigation;\n","import React, { Fragment } from \"react\";\nimport { HashRouter as Router, Route, Switch } from \"react-router-dom\";\nimport Auth from \"routes/Auth\";\nimport Home from \"routes/Home\";\nimport Profile from \"routes/Profile\";\nimport Navigation from \"components/Navigation\";\n\nconst AppRouter = ({ isLoggedIn, userObj, refreshUser }) => {\n  //   const [isLoggedIn, setIsLoggedIn] = useState(false);\n  //   라우트 기능만 하는것이 적합, 스테이트 관리는 상위 컴포넌트로 빼준다.\n  return (\n    <Router>\n      {isLoggedIn && <Navigation userObj={userObj} />}\n      <Switch>\n        {isLoggedIn ? (\n          <Fragment>\n            <Route exact path=\"/\">\n              <Home userObj={userObj} />\n            </Route>\n            <Route exact path=\"/profile\">\n              <Profile refreshUser={refreshUser} userObj={userObj} />\n            </Route>\n          </Fragment>\n        ) : (\n          <Route exact path=\"/\">\n            <Auth />\n          </Route>\n        )}\n      </Switch>\n    </Router>\n  );\n};\n\nexport default AppRouter;\n","import { useEffect, useState } from \"react\";\nimport AppRouter from \"./Router\";\nimport { authService } from \"fbInstance\";\n\nconst App = () => {\n  const [init, setInit] = useState(false);\n  const [userObj, setUserObj] = useState(null);\n\n  useEffect(() => {\n    authService.onAuthStateChanged(authService.getAuth(), (user) => {\n      if (user) setUserObj(user);\n      else setUserObj(null);\n      setInit(true);\n    });\n  }, []);\n\n  const refreshUser = () => {\n    const user = authService.getAuth().currentUser;\n    setUserObj(Object.assign({}, user)); //이렇게 복제된 객체는 updateProfile에 넘길 때 오류발생.. 다시 user 원본으로 업데이트 시켜주는 작업 뒤에 진행\n    setUserObj(user);\n  };\n\n  return (\n    <>\n      {init ? (\n        <AppRouter\n          refreshUser={refreshUser}\n          isLoggedIn={Boolean(userObj)}\n          userObj={userObj}\n        />\n      ) : (\n        \"initializing\"\n      )}\n    </>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}